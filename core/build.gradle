apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {

    final build = rootProject.ext.buildVersions

    compileSdkVersion build.compileSdk

    defaultConfig {
        minSdkVersion build.minSdk
        targetSdkVersion build.targetSdk

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += "src/androidTest/kotlin"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    final libs = rootProject.ext.libsVersions
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$libs.kotlin"
    implementation "com.android.support:appcompat-v7:$libs.support"
    implementation "com.android.support:cardview-v7:$libs.support"
    implementation "com.google.code.gson:gson:$libs.gson"

    // Tests
    final testLibs = rootProject.ext.testLibsVersions
    testImplementation "junit:junit:$testLibs.jUnit"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$testLibs.mockitoKotlin"
    testImplementation "org.robolectric:robolectric:$testLibs.roboeletric"

    androidTestImplementation "com.android.support.test.espresso:espresso-core:$testLibs.espresso"

    // Linters
    ktlint "com.github.shyiko:ktlint:$rootProject.ext.lintersVersions.ktlint"
}

// Set up publication
ext {
    artifact = 'yosef-core'
    libraryName = 'Android Yosef Core'
    libraryDescription = 'Android library for creating dynamic views from JSON objects'
}

def localProps = project.rootProject.file('local.properties')

if (localProps.exists()) {
    final Properties properties = new Properties()
    properties.load(localProps.newDataInputStream())
    final user = properties.getProperty('bintray.user')
    final apikey = properties.getProperty('bintray.apikey')

    if (user && apikey)
        apply from: "$rootDir/tools/publish.gradle"
}
